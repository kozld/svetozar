// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/kozld/svetozar/config"
	"github.com/kozld/svetozar/internal/app/dependencies"
	"github.com/kozld/svetozar/internal/app/initializers"
	"github.com/kozld/svetozar/internal/repositories/message"
	"github.com/kozld/svetozar/internal/services/listener"
	"github.com/kozld/svetozar/internal/services/validator"
)

// Injectors from wire.go:

func BuildApplication() (*Application, error) {
	configConfig := config.LoadConfig()
	client, err := initializers.InitializeTDLibClient(configConfig)
	if err != nil {
		return nil, err
	}
	db, err := initializers.InitializeDatabase(configConfig)
	if err != nil {
		return nil, err
	}
	repository := message.New(db)
	logger := initializers.InitializeLogs()
	service := listener.New(client, repository, logger)
	validatorService := validator.New(repository, logger)
	workerPool := initializers.InitializeWorkerpool(service, validatorService)
	container := &dependencies.Container{
		TDLibClient: client,
		Workerpool:  workerPool,
		Repository:  repository,
		Config:      configConfig,
		Logger:      logger,
	}
	application := &Application{
		Container: container,
	}
	return application, nil
}
